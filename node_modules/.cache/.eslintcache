[{"/Users/mac/Documents/Assignment/src/index.js":"1","/Users/mac/Documents/Assignment/src/App.js":"2","/Users/mac/Documents/Assignment/src/points.js":"3","/Users/mac/Documents/Assignment/src/InputForm.js":"4","/Users/mac/Documents/Assignment/src/SearchSelectInput.js":"5","/Users/mac/Documents/Assignment/src/TotalCostTripForm.js":"6"},{"size":456,"mtime":1655654142696,"results":"7","hashOfConfig":"8"},{"size":4725,"mtime":1655673559010,"results":"9","hashOfConfig":"8"},{"size":132,"mtime":1655577388000,"results":"10","hashOfConfig":"8"},{"size":2581,"mtime":1655668242993,"results":"11","hashOfConfig":"8"},{"size":1082,"mtime":1655662072185,"results":"12","hashOfConfig":"8"},{"size":1962,"mtime":1655663027204,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1r9kery",{"filePath":"17","messages":"18","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"16"},"/Users/mac/Documents/Assignment/src/index.js",[],["32","33"],"/Users/mac/Documents/Assignment/src/App.js",["34","35","36","37","38","39","40","41","42","43"],"import React, { useState } from \"react\";\nimport InputForm from \"./InputForm\";\nimport TotalCostTripForm from \"./TotalCostTripForm\";\nconst BASE_RATE = 20;\nconst CHARGE_PER_KILOMETER = 0.2;\nconst INCREMENT_CHARGE = 1.5;\nconst HOLIDAYS_ARRAY = [\"12-25\", \"3-23\", \"8-14\"];\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n// 1. start rate = 20 \n// 2. normal = 0.2 rupees per KM done\n// 3. (Sat/Sun) = 1.5x per km done\n// 4. For Mon and Wed  even number = 10% discount,\n// for Tues and Thurs,  odd number =10%\n// 5. On 3 national holidays discount will be given of 50% (23rd march, 14th August, and 25th  December)\n// Fri = 0.2\n// 6. The actual toll is collected when the vehicle exits the road.\nexport default function App() {\n  const [vehicles, setVehicle] = useState([]);\n  const [totalCostTrip, setTotalCostTrip] = useState(\n    {\n      baseRate: 20,\n      breakDown: 0,\n      SubTotal: 0,\n      discount: 0,\n      vehicleNumber: '',\n      total: 0\n    }\n  );\n  const formula = (exit) => {\n    let index = vehicles.findIndex((item) => item.numberPlate = exit.numberPlate.value)\n    var startInterchange = vehicles[index].interchangeName.value\n    let subTotal = 0\n    let totalDiscount = 0\n    let totalCost = 0\n    let carEven = exit.numberPlate.value.split(\"-\")[1] % 2 == 0\n    var exitInterchange = exit.interchangeName.value\n    var totalDistance = Math.abs(startInterchange - exitInterchange)\n    var findDay = new Date(exit.dateTime).getDate()\n    var findMonth = new Date(exit.dateTime).getMonth() + 1\n    let findHoliday = `${findMonth}-${findDay}`\n    var day = days[findDay];\n    if (day == 'Sunday' || day == 'Saturday') {\n      subTotal = (totalDistance * INCREMENT_CHARGE) + 20\n    } else if (day == 'Monday' || day == 'Wednesday') {\n      subTotal = (totalDistance * CHARGE_PER_KILOMETER) + 20\n      if (carEven) {\n        totalDiscount = ((10 / 100) * subTotal)\n      }\n\n    } else if (day == 'Tuesday' || day == 'Thursday') {\n      subTotal = (totalDistance * CHARGE_PER_KILOMETER) + 20\n      if (!carEven) {\n        totalDiscount = ((10 / 100) * subTotal)\n      }\n\n    } else {\n      subTotal = (totalDistance * CHARGE_PER_KILOMETER) + 20\n    }\n    if (HOLIDAYS_ARRAY.includes(findHoliday)) {\n      totalDiscount = ((50 / 100) * subTotal)\n    }\n    alert(findHoliday)\n    totalCost = subTotal - totalDiscount\n    setTotalCostTrip({\n      baseRate: 20,\n      breakDown: totalDistance,\n      SubTotal: subTotal,\n      discount: totalDiscount,\n      vehicleNumber: exit.numberPlate.value,\n      total: totalCost\n    })\n  }\n  const postApi = async(data) => {\n    const response = await fetch(\"https://crudcrud.com/api/0de6f86092554f1a984f644dc24fb0f5/trips\", {\n      method: \"POST\",\n      content: \"application/json\",\n      body: JSON.stringify({\n        EntryDateTime: data.cost,\n        NumberPlate:  data.cost,\n        EntryInterchange: data.cost,\n        TripStatus: \"Active\",\n        ExitDateTime: data.cost,\n        ExitInterchange:  data.cost,\n        TotalCostTrip: data.cost,\n      }),\n    }).then((res) =>{\n    console.log(res,\"res\")\n\n    });\n    console.log(response)\n  }\n  const updateApi = (data) => {\n    const response = fetch(\"https://crudcrud.com/api/0de6f86092554f1a984f644dc24fb0f5/trips\", {\n      method: \"PUT\",\n      content: \"application/json\",\n      body: JSON.stringify({\n        EntryDateTime: data.cost,\n          NumberPlate:  data.cost,\n          EntryInterchange: data.cost,\n          TripStatus: \"Completed\",\n          ExitDateTime: data.cost,\n          ExitInterchange:  data.cost,\n          TotalCostTrip: data.cost,\n      }),\n    });\n    console.log(response)\n  }\n  return (\n    <div class=\"container\">\n      <div class=\"row top30\">\n        <div class=\"col-5 border-add\">\n          <InputForm\n            getVehicle={(vehicle) => {\n              setVehicle([...vehicles, vehicle])\n            }} />\n\n        </div>\n        <div class=\"col-1\" />\n        <div class=\"col-5 border-add\">\n          <InputForm\n            exit\n            vehicles={vehicles}\n            getVehicle={(vehicle) => {\n              formula(vehicle)\n            }} />\n\n        </div>\n      </div>\n      <div class=\"row top30\">\n        <div class=\"col\">\n          <TotalCostTripForm totalCostTrip={totalCostTrip} />\n        </div>\n      </div>\n      <div class=\"row top30\">\n        <span>Total Vsehicles: {vehicles.length}</span>\n\n        {vehicles.map((item) => {\n          return (\n            <div class=\"col-2\">\n              <button\n                className='button'\n                type=\"submit\"\n              >\n                <span>{item.numberPlate}</span>\n              </button>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n","/Users/mac/Documents/Assignment/src/points.js",[],["44","45"],"/Users/mac/Documents/Assignment/src/InputForm.js",["46","47"],"import React, { useState } from 'react';\nimport SearchSelectInput from './SearchSelectInput';\n\nconst InputForm = (props) => {\n  const { exit, getVehicle, vehicles } = props\n  const [entryValues, setEntryValues] = useState({\n    interchangeName: \"\",\n    numberPlate: \"\",\n    dateTime: \"\",\n    label: '',\n    value: ''\n  });\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEntryValues((prev) => ({\n      ...prev,\n      [name]:\n        name == \"numberPlate\" ? value.replace(/([a-z]){2}(\\d)/i, \"$1-$2\") : value,\n    }));\n    if (name == \"numberPlate\") {\n      setEntryValues((prev) => ({\n        ...prev,\n        label: value.replace(/([a-z])(\\d)/i, \"$1-$2\"),\n        value: value.replace(/([a-z])(\\d)/i, \"$1-$2\")\n      }));\n    }\n\n  };\n  const handleSubmit = () => {\n    \n    if (!entryValues.interchangeName) {\n      alert(\"please enter interchange Name\")\n    } else if (!entryValues.numberPlate) {\n      alert(\"please enter number Plate\")\n    } else if (!entryValues.dateTime) {\n      alert(\"please enter Date\")\n    } else {\n        getVehicle(entryValues)\n    }\n\n  };\n  return (\n    <div class=\"container\">\n      <span>{exit ? \"Exit\" : \"Entry\"}</span>\n      <div class=\"row top20\">\n        <SearchSelectInput\n          getValue={(value) => {\n            setEntryValues((prev) => ({\n              ...prev,\n              interchangeName: value\n            }))\n          }} />\n      </div>\n      <div class=\"row top20\">\n        {exit ? <SearchSelectInput\n          plate\n          vehicles={vehicles}\n          getValue={(value) => {\n            setEntryValues((prev) => ({\n              ...prev,\n              numberPlate: value\n            }))\n          }} /> :\n          <div class=\"col\">\n            <input\n              name=\"numberPlate\"\n              className='width-inherit'\n              placeholder=\"Number Plate LLL-NNN\"\n              onChange={handleChange}\n              maxLength={7}\n            />\n          </div>}\n      </div>\n      <div class=\"row top20\">\n        <div class=\"col\">\n          <input\n            className='width-inherit'\n            onChange={handleChange}\n            name=\"dateTime\"\n            placeholder=\"Date-Time\"\n            type=\"date\"\n          />\n        </div>\n      </div>\n      <div class=\"row top20\">\n        <div class=\"col-8\">\n        </div>\n        <div class=\"col-3\">\n          <button\n            className='button'\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InputForm;","/Users/mac/Documents/Assignment/src/SearchSelectInput.js",["48"],"import React from 'react';\nimport Select from 'react-select';\n\nconst dummy = [\n  { label: 'Shark', value: 'Shark' },\n  { label: 'Dolphin', value: 'Dolphin' },\n  { label: 'Whale', value: 'Whale' },\n  { label: 'Octopus', value: 'Octopus' },\n  { label: 'Crab', value: 'Crab' },\n  { label: 'Lobster', value: 'Lobster' },\n];\nconst points = [\n  { id: 1, label: 'Zero point', value: '0' },\n  { id: 2, label: 'NS Interchange', value: '5' },\n  { id: 3, label: 'Ph4 Interchange', value: '10' },\n  { id: 4, label: 'Ferozpur Interchange', value: '17' },\n  { id: 5, label: 'Lake City Interchange', value: '24' },\n  { id: 6, label: 'Raiwand Interchange', value: '29' },\n  { id: 7, label: 'Bahria Interchange', value: '34' }\n];\n\nfunction SearchSelectInput({ plate, vehicles, getValue }) {\n  return (\n    <div className=\"App\">\n      <Select\n        placeholder={plate ? \"Number-Plate LLL-NNN\" : \"Interchange\"}\n        options={plate ? vehicles : points}\n        onChange={opt => {\n          getValue(opt)\n          return opt\n        }}\n      />\n    </div>\n  );\n}\n\nexport default SearchSelectInput;","/Users/mac/Documents/Assignment/src/TotalCostTripForm.js",["49","50"],"import React, { useState } from \"react\";\nimport InputForm from \"./InputForm\";\n\nexport default function TotalCostTripForm({ totalCostTrip }) {\n  const { baseRate, breakDown, SubTotal, discount, total,vehicleNumber } = totalCostTrip\n  return (\n    <div class=\"container\">\n      <span>{vehicleNumber}</span>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span>Break Down Cost</span>\n        </div>\n        <div class=\"col-2\">\n        </div>\n        <div class=\"col-4\">\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>Base Rate: {baseRate}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span>Distance Cost</span>\n        </div>\n        <div class=\"col-4\">\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>BreakDown: {breakDown}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>Sub-Total: {SubTotal}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>Discount/Other: {discount}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>TOTAL TO BE CHARGED: {total}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":4,"column":7,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":35,"column":60,"nodeType":"61","messageId":"62","endLine":35,"endColumn":62},{"ruleId":"59","severity":1,"message":"60","line":42,"column":13,"nodeType":"61","messageId":"62","endLine":42,"endColumn":15},{"ruleId":"59","severity":1,"message":"60","line":42,"column":32,"nodeType":"61","messageId":"62","endLine":42,"endColumn":34},{"ruleId":"59","severity":1,"message":"60","line":44,"column":20,"nodeType":"61","messageId":"62","endLine":44,"endColumn":22},{"ruleId":"59","severity":1,"message":"60","line":44,"column":39,"nodeType":"61","messageId":"62","endLine":44,"endColumn":41},{"ruleId":"59","severity":1,"message":"60","line":50,"column":20,"nodeType":"61","messageId":"62","endLine":50,"endColumn":22},{"ruleId":"59","severity":1,"message":"60","line":50,"column":40,"nodeType":"61","messageId":"62","endLine":50,"endColumn":42},{"ruleId":"55","severity":1,"message":"63","line":73,"column":9,"nodeType":"57","messageId":"58","endLine":73,"endColumn":16},{"ruleId":"55","severity":1,"message":"64","line":92,"column":9,"nodeType":"57","messageId":"58","endLine":92,"endColumn":18},{"ruleId":"51","replacedBy":"65"},{"ruleId":"53","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"60","line":18,"column":14,"nodeType":"61","messageId":"62","endLine":18,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":20,"column":14,"nodeType":"61","messageId":"62","endLine":20,"endColumn":16},{"ruleId":"55","severity":1,"message":"67","line":4,"column":7,"nodeType":"57","messageId":"58","endLine":4,"endColumn":12},{"ruleId":"55","severity":1,"message":"68","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"69","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":17},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'BASE_RATE' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'postApi' is assigned a value but never used.","'updateApi' is assigned a value but never used.",["70"],["71"],"'dummy' is assigned a value but never used.","'useState' is defined but never used.","'InputForm' is defined but never used.","no-global-assign","no-unsafe-negation"]