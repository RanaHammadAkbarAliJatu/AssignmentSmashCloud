{"version":3,"sources":["SearchSelectInput.js","InputForm.js","TotalCostTripForm.js","App.js","index.js"],"names":["points","id","label","value","SearchSelectInput","plate","vehicles","getValue","className","placeholder","options","onChange","opt","InputForm","props","exit","getVehicle","useState","interchangeName","numberPlate","dateTime","entryValues","setEntryValues","handleChange","e","target","name","prev","replace","class","maxLength","type","onClick","alert","TotalCostTripForm","totalCostTrip","baseRate","breakDown","SubTotal","discount","total","vehicleNumber","HOLIDAYS_ARRAY","days","App","setVehicle","setTotalCostTrip","vehicle","totalCost","index","findIndex","item","startInterchange","subTotal","totalDiscount","carEven","split","exitInterchange","totalDistance","Math","abs","findDay","Date","getDate","findMonth","getMonth","findHoliday","day","includes","formula","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14d59841.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\n\nconst dummy = [\n  { label: 'Shark', value: 'Shark' },\n  { label: 'Dolphin', value: 'Dolphin' },\n  { label: 'Whale', value: 'Whale' },\n  { label: 'Octopus', value: 'Octopus' },\n  { label: 'Crab', value: 'Crab' },\n  { label: 'Lobster', value: 'Lobster' },\n];\nconst points = [\n  { id: 1, label: 'Zero point', value: '0' },\n  { id: 2, label: 'NS Interchange', value: '5' },\n  { id: 3, label: 'Ph4 Interchange', value: '10' },\n  { id: 4, label: 'Ferozpur Interchange', value: '17' },\n  { id: 5, label: 'Lake City Interchange', value: '24' },\n  { id: 6, label: 'Raiwand Interchange', value: '29' },\n  { id: 7, label: 'Bahria Interchange', value: '34' }\n];\n\nfunction SearchSelectInput({ plate, vehicles, getValue }) {\n  return (\n    <div className=\"App\">\n      <Select\n        placeholder={plate ? \"Number-Plate LLL-NNN\" : \"Interchange\"}\n        options={plate ? vehicles : points}\n        onChange={opt => {\n          getValue(opt)\n          return opt\n        }}\n      />\n    </div>\n  );\n}\n\nexport default SearchSelectInput;","import React, { useState } from 'react';\nimport SearchSelectInput from './SearchSelectInput';\n\nconst InputForm = (props) => {\n  const { exit, getVehicle, vehicles } = props\n  const [entryValues, setEntryValues] = useState({\n    interchangeName: \"\",\n    numberPlate: \"\",\n    dateTime: \"\",\n    label: '',\n    value: ''\n  });\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEntryValues((prev) => ({\n      ...prev,\n      [name]:\n        name == \"numberPlate\" ? value.replace(/([a-z]){2}(\\d)/i, \"$1-$2\") : value,\n    }));\n    if (name == \"numberPlate\") {\n      setEntryValues((prev) => ({\n        ...prev,\n        label: value.replace(/([a-z])(\\d)/i, \"$1-$2\"),\n        value: value.replace(/([a-z])(\\d)/i, \"$1-$2\")\n      }));\n    }\n\n  };\n  const handleSubmit = () => {\n    \n    if (!entryValues.interchangeName) {\n      alert(\"please enter interchange Name\")\n    } else if (!entryValues.numberPlate) {\n      alert(\"please enter number Plate\")\n    } else if (!entryValues.dateTime) {\n      alert(\"please enter Date\")\n    } else {\n        getVehicle(entryValues)\n    }\n\n  };\n  return (\n    <div class=\"container\">\n      <span>{exit ? \"Exit\" : \"Entry\"}</span>\n      <div class=\"row top20\">\n        <SearchSelectInput\n          getValue={(value) => {\n            setEntryValues((prev) => ({\n              ...prev,\n              interchangeName: value\n            }))\n          }} />\n      </div>\n      <div class=\"row top20\">\n        {exit ? <SearchSelectInput\n          plate\n          vehicles={vehicles}\n          getValue={(value) => {\n            setEntryValues((prev) => ({\n              ...prev,\n              numberPlate: value\n            }))\n          }} /> :\n          <div class=\"col\">\n            <input\n              name=\"numberPlate\"\n              className='width-inherit'\n              placeholder=\"Number Plate LLL-NNN\"\n              onChange={handleChange}\n              maxLength={7}\n            />\n          </div>}\n      </div>\n      <div class=\"row top20\">\n        <div class=\"col\">\n          <input\n            className='width-inherit'\n            onChange={handleChange}\n            name=\"dateTime\"\n            placeholder=\"Date-Time\"\n            type=\"date\"\n          />\n        </div>\n      </div>\n      <div class=\"row top20\">\n        <div class=\"col-8\">\n        </div>\n        <div class=\"col-3\">\n          <button\n            className='button'\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InputForm;","import React, { useState } from \"react\";\nimport InputForm from \"./InputForm\";\n\nexport default function TotalCostTripForm({ totalCostTrip }) {\n  const { baseRate, breakDown, SubTotal, discount, total,vehicleNumber } = totalCostTrip\n  return (\n    <div class=\"container\">\n      <span>{vehicleNumber}</span>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span>Break Down Cost</span>\n        </div>\n        <div class=\"col-2\">\n        </div>\n        <div class=\"col-4\">\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>Base Rate: {baseRate}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span>Distance Cost</span>\n        </div>\n        <div class=\"col-4\">\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>BreakDown: {breakDown}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>Sub-Total: {SubTotal}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>Discount/Other: {discount}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <span></span>\n        </div>\n        <div class=\"col-4\">\n          <span>TOTAL TO BE CHARGED: {total}</span>\n        </div>\n        <div class=\"col-6\">\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport InputForm from \"./InputForm\";\nimport TotalCostTripForm from \"./TotalCostTripForm\";\nconst BASE_RATE = 20;\nconst CHARGE_PER_KILOMETER = 0.2;\nconst INCREMENT_CHARGE = 1.5;\nconst HOLIDAYS_ARRAY = [\"12-25\", \"3-23\", \"8-14\"];\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n// 1. start rate = 20 \n// 2. normal = 0.2 rupees per KM done\n// 3. (Sat/Sun) = 1.5x per km done\n// 4. For Mon and Wed  even number = 10% discount,\n// for Tues and Thurs,  odd number =10%\n// 5. On 3 national holidays discount will be given of 50% (23rd march, 14th August, and 25th  December)\n// Fri = 0.2\n// 6. The actual toll is collected when the vehicle exits the road.\nexport default function App() {\n  const [vehicles, setVehicle] = useState([]);\n  const [totalCostTrip, setTotalCostTrip] = useState(\n    {\n      baseRate: 20,\n      breakDown: 0,\n      SubTotal: 0,\n      discount: 0,\n      vehicleNumber: '',\n      total: 0\n    }\n  );\n  const formula = (exit) => {\n    let index = vehicles.findIndex((item) => item.numberPlate = exit.numberPlate.value)\n    var startInterchange = vehicles[index].interchangeName.value\n    let subTotal = 0\n    let totalDiscount = 0\n    let totalCost = 0\n    let carEven = exit.numberPlate.value.split(\"-\")[1] % 2 == 0\n    var exitInterchange = exit.interchangeName.value\n    var totalDistance = Math.abs(startInterchange - exitInterchange)\n    var findDay = new Date(exit.dateTime).getDate()\n    var findMonth = new Date(exit.dateTime).getMonth() + 1\n    let findHoliday = `${findMonth}-${findDay}`\n    var day = days[findDay];\n    if (day == 'Sunday' || day == 'Saturday') {\n      subTotal = (totalDistance * INCREMENT_CHARGE) + 20\n    } else if (day == 'Monday' || day == 'Wednesday') {\n      subTotal = (totalDistance * CHARGE_PER_KILOMETER) + 20\n      if (carEven) {\n        totalDiscount = ((10 / 100) * subTotal)\n      }\n\n    } else if (day == 'Tuesday' || day == 'Thursday') {\n      subTotal = (totalDistance * CHARGE_PER_KILOMETER) + 20\n      if (!carEven) {\n        totalDiscount = ((10 / 100) * subTotal)\n      }\n\n    } else {\n      subTotal = (totalDistance * CHARGE_PER_KILOMETER) + 20\n    }\n    if (HOLIDAYS_ARRAY.includes(findHoliday)) {\n      totalDiscount = ((50 / 100) * subTotal)\n    }\n    totalCost = subTotal - totalDiscount\n    setTotalCostTrip({\n      baseRate: 20,\n      breakDown: totalDistance,\n      SubTotal: subTotal,\n      discount: totalDiscount,\n      vehicleNumber: exit.numberPlate.value,\n      total: totalCost\n    })\n  }\n  const postApi = async(data) => {\n    const response = await fetch(\"https://crudcrud.com/api/0de6f86092554f1a984f644dc24fb0f5/trips\", {\n      method: \"POST\",\n      content: \"application/json\",\n      body: JSON.stringify({\n        EntryDateTime: data.cost,\n        NumberPlate:  data.cost,\n        EntryInterchange: data.cost,\n        TripStatus: \"Active\",\n        ExitDateTime: data.cost,\n        ExitInterchange:  data.cost,\n        TotalCostTrip: data.cost,\n      }),\n    }).then((res) =>{\n    console.log(res,\"res\")\n\n    });\n    console.log(response)\n  }\n  const updateApi = (data) => {\n    const response = fetch(\"https://crudcrud.com/api/0de6f86092554f1a984f644dc24fb0f5/trips\", {\n      method: \"PUT\",\n      content: \"application/json\",\n      body: JSON.stringify({\n        EntryDateTime: data.cost,\n          NumberPlate:  data.cost,\n          EntryInterchange: data.cost,\n          TripStatus: \"Completed\",\n          ExitDateTime: data.cost,\n          ExitInterchange:  data.cost,\n          TotalCostTrip: data.cost,\n      }),\n    });\n    console.log(response)\n  }\n  return (\n    <div class=\"container\">\n      <div class=\"row top30\">\n        <div class=\"col-5 border-add\">\n          <InputForm\n            getVehicle={(vehicle) => {\n              setVehicle([...vehicles, vehicle])\n            }} />\n\n        </div>\n        <div class=\"col-1\" />\n        <div class=\"col-5 border-add\">\n          <InputForm\n            exit\n            vehicles={vehicles}\n            getVehicle={(vehicle) => {\n              formula(vehicle)\n            }} />\n\n        </div>\n      </div>\n      <div class=\"row top30\">\n        <div class=\"col\">\n          <TotalCostTripForm totalCostTrip={totalCostTrip} />\n        </div>\n      </div>\n      <div class=\"row top30\">\n        <span>Total Vsehicles: {vehicles.length}</span>\n\n        {vehicles.map((item) => {\n          return (\n            <div class=\"col-2\">\n              <button\n                className='button'\n                type=\"submit\"\n              >\n                <span>{item.numberPlate}</span>\n              </button>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}